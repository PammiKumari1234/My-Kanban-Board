"use client"; // Marks this component as a Client Component in Next.js

import React, { useState, useEffect } from "react";
import { Task } from "../type"; // Corrected import path for types

// Define props for the TaskFormModal component
interface TaskFormModalProps {
  isOpen: boolean; // Controls the visibility of the modal
  onClose: () => void; // Function to close the modal
  onSubmit: (task: Omit<Task, "id">) => Promise<void>; // Function to handle form submission
}

const TaskFormModal: React.FC<TaskFormModalProps> = ({
  isOpen,
  onClose,
  onSubmit,
}) => {
  // State variables to manage form inputs
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [PStatus, setPStatus] = useState("backlog");
  const [assignee, setAssignee] = useState("");
  const [priority, setPriority] = useState<"low" | "medium" | "high">("low"); // Default priority

  // Reset form fields when the modal opens/closes
  useEffect(() => {
    if (!isOpen) {
      setTitle("");
      setDescription("");
      setPStatus("backlog");
      setAssignee("");
      setPriority("low");
    }
  }, [isOpen]);

  // Handle form submission
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault(); // Prevent default form submission behavior

    // Create a new task object (excluding 'id' as it's auto-generated by Prisma)
    const newTaskData: Omit<Task, "id"> = {
      title,
      description,
      PStatus,
      assignee,
      priority,
    };

    await onSubmit(newTaskData); // Call the onSubmit prop with the new task data
    onClose(); // Close the modal after submission
  };

  // If modal is not open, return null to render nothing
  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-20 z-50">
      <form
        onSubmit={handleSubmit}
        className="bg-white p-6 rounded-lg shadow-lg w-full max-w-md space-y-4"
      >
        <h2 className="text-xl font-bold text-gray-700" style={{ margin: "10px" }}>
          Create a New Task
        </h2>
        <div className="flex flex-col gap-2" style={{ margin: "10px" }}>
          <label className="font-medium text-gray-600">Title</label>
          <input
            className="w-full border px-3 py-2 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-transparent"
            placeholder="Task Title"
            value={title}
            onChange={(e) => setTitle(e.target.value)}
            required
          />
        </div>

        <div className="flex flex-col gap-2" style={{ margin: "10px" }}>
          <label className="font-medium text-gray-600">Description</label>
          <textarea
            className="w-full border px-3 py-2 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-transparent"
            placeholder="Task Description"
            value={description}
            onChange={(e) => setDescription(e.target.value)}
          />
        </div>

        <div className="flex flex-col gap-2" style={{ margin: "10px" }}>
          <label className="font-medium text-gray-600">Status</label>
          <select
            className="w-full border px-3 py-2 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-transparent"
            value={PStatus}
            onChange={(e) => setPStatus(e.target.value)}
          >
            <option value="backlog">Backlog</option>
            <option value="inProgress">In Progress</option>
            <option value="review">Review</option>
            <option value="done">Done</option>
          </select>
        </div>

        <div className="flex flex-col gap-2" style={{ margin: "10px" }}>
          <label className="font-medium text-gray-600">Assignee</label>
          <input
            className="w-full border px-3 py-2 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-transparent"
            placeholder="Assignee Name"
            value={assignee}
            onChange={(e) => setAssignee(e.target.value)}
          />
        </div>

        <div className="flex flex-col gap-2" style={{ margin: "10px" }}>
          <label className="font-medium text-gray-600">Priority</label>
          <select
            className="w-full border px-3 py-2 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-transparent"
            value={priority}
            onChange={(e) => setPriority(e.target.value as Task["priority"])}
          >
            <option value="low">Low</option>
            <option value="medium">Medium</option>
            <option value="high">High</option>
          </select>
        </div>

        <div className="flex justify-end gap-3" style={{ margin: "10px" }}>
          <button
            type="button"
            onClick={onClose}
            className="px-4 py-2 rounded-md text-gray-600 border border-gray-300 hover:bg-gray-100 transition-colors"
          >
            Cancel
          </button>
          <button
            type="submit"
            className="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition-colors"
          >
            Save Task
          </button>
        </div>
      </form>
    </div>
  );
};

export default TaskFormModal;